let lastCity = '';

document.getElementById('cityForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const city = document.getElementById('cityInput').value.trim();
  if (!city) return;

  lastCity = city;
  await fetchWeather(city);
});

async function fetchWeather(city) {
  const resultDiv = document.getElementById('weatherResult');
  resultDiv.innerHTML = '<p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–≥–æ–¥—ã...</p>';
  resultDiv.classList.add('show');

  try {
    // 1. –ì–µ–æ–∫–æ–¥–∏–Ω–≥
    const geoResponse = await fetch(
      `https://nominatim.openstreetmap.org/search?city=${encodeURIComponent(city)}&format=json&limit=1`
    );
    const geoData = await geoResponse.json();

    if (!geoData || geoData.length === 0) {
      resultDiv.innerHTML = '<p>–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.</p>';
      return;
    }

    const { lat, lon, display_name } = geoData[0];

    // 2. –ü–æ–≥–æ–¥–∞
    const weatherResponse = await fetch(
      `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true`
    );
    const weatherData = await weatherResponse.json();

    if (!weatherData.current_weather) {
      resultDiv.innerHTML = '<p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.</p>';
      return;
    }

    const { temperature, windspeed } = weatherData.current_weather;
    const now = new Date().toLocaleString('ru-RU', {
      timeZone: 'Europe/Moscow',
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });

    // –ò–∫–æ–Ω–∫–∞ –ø–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
    let weatherIcon = 'üå§Ô∏è';
    if (temperature < 0) weatherIcon = '‚ùÑÔ∏è';
    else if (temperature < 10) weatherIcon = '‚òÅÔ∏è';
    else if (temperature < 20) weatherIcon = '‚õÖ';
    else weatherIcon = '‚òÄÔ∏è';

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    resultDiv.innerHTML = `
      <div class="weather-header">
        <span class="weather-icon-large">${weatherIcon}</span>
        <h2>${display_name.split(',')[0]}</h2>
      </div>
      <div class="result-item">
        <label>üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</label>
        <span>${temperature}¬∞C</span>
      </div>
      <div class="result-item">
        <label>üí® –í–µ—Ç–µ—Ä:</label>
        <span>${windspeed} –∫–º/—á</span>
      </div>
      <div class="result-item">
        <label>üìÖ –ó–∞–ø—Ä–æ—Å:</label>
        <span>${now}</span>
      </div>
      <details class="tech-details">
        <summary>üåç –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary>
        <p><strong>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong> ${lat}, ${lon}</p>
        <p><strong>API:</strong> Open-Meteo + Nominatim (OpenStreetMap)</p>
      </details>
      <div class="action-buttons">
        <button id="refreshBtn" class="btn">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
        <a href="./index.html">üè†–ù–∞ –≥–ª–∞–≤–Ω—É—é</a>
      </div>
    `;

    document.getElementById('refreshBtn').addEventListener('click', () => {
      fetchWeather(lastCity);
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    resultDiv.innerHTML = '<p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</p>';
  }
}